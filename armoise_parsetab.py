
# armoise_parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = "left+-left*/%rightUMINUSUPLUSNOT!AND ASSIGN BACKSLASH DOTS EMPTY EQUIV EXISTS FALSE FORALL GEQ IDENTIFIER IMPLY IN INTEGERS INTERSECTION LEQ LET NATURALS NEQ NOT OR POSITIVES REALS TRUE UINT UNIONgrammar_start_rule : armoise_description\n| emptyempty :armoise_description : definition_or_predicate_listdefinition_or_predicate_list : definition_or_predicate ';' definition_or_predicate_list\n| definition_or_predicate ';' definition_or_predicate : predicate\n| predicate_definitionpredicate_definition : identifier_or_tuple ASSIGN predicateidentifier_or_tuple : tuple_of_identifiers\n| identifiertuple_of_identifiers : '<' list_of_tuples '>' list_of_tuples : identifier_or_tuple ',' list_of_tuples\n| identifier_or_tupleidentifier : IDENTIFIERpredicate : predicate_without_local_context\n| local_context tuple_of_predicates_without_local_context\n| local_context predicate_without_local_contextlocal_context : LET list_of_predicate_definitions INlist_of_predicate_definitions : predicate_definition ';' list_of_predicate_definitions\n| predicate_definition ';' tuple_of_predicates_without_local_context : '<' list_of_tuple_of_predicates '>' list_of_tuple_of_predicates : predicate_without_local_context ',' list_of_tuple_of_predicates\n| predicate_without_local_contextpredicate_without_local_context : setset : set UNION set\n| set BACKSLASH set\n| set '^' set\n| set INTERSECTION set\n| set '+' set\n| set '-' set\n| set '*' set\n| set '/' set\n| set '%' set\n| '!' set %prec '!'\n| '-' set %prec UMINUS\n| NOT set\n| '(' list_of_boolean_combinations ')'\n| '(' set ')'\n| simple_set\n| list_element\n| range\n| set '$' integer\n| integer\n| '+' integer %prec UPLUS\n| NATURALS\n| INTEGERS\n| POSITIVES\n| REALS\n| EMPTYinteger : UINTlist_element : identifier\n| list_element '[' integer ']' list_of_boolean_combinations : set ',' list_of_boolean_combinations\n| set ',' setlist_of_terms : term ',' list_of_terms\n| termvector_of_terms : '(' list_of_terms ')' formula : formula '|' formula\n| formula OR formula\n| formula '&' formula\n| formula AND formula\n| formula EQUIV formula\n| formula IMPLY formula\n| term_comparison\n| quantified_formula\n| '!' formula %prec NOT\n| NOT formula\n| term IN set\n| '(' formula ')' \n| identifier vector_of_terms\n| TRUE\n| FALSEterm_comparison : term '=' term\n| term NEQ term\n| term '<' term\n| term '>' term\n| term LEQ term\n| term GEQ termquantified_formula : EXISTS typed_identifier formula\n| FORALL typed_identifier formulatyped_identifier : identifier IN predicate_without_local_context\n| vector_of_terms IN predicate_without_local_contextterm : term '+' term\n| term '-' term\n| term '*' term\n| term '/' term\n| term '%' term\n| '-' term %prec UMINUS\n| vector_of_terms\n| list_element\n| integer\n| '+' integer %prec UPLUSsimple_set : '{' list_of_terms '}'\n| '{' typed_identifier '|' formula '}'\n| '{' typed_identifier '}' range : '[' integer DOTS integer ']'\n| '[' integer ',' integer ']' "
    
_lr_action_items = {'$end':([0,1,2,3,4,34,73,],[-3,0,-1,-2,-4,-6,-5,]),'LET':([0,34,39,],[12,12,12,]),'!':([0,9,11,16,17,18,19,20,21,22,23,24,25,26,27,28,30,33,34,37,38,39,40,41,42,43,44,45,46,47,48,53,54,55,56,77,78,79,80,81,82,83,84,85,86,87,89,90,91,95,96,97,104,105,113,117,122,123,125,137,138,143,144,145,146,147,148,149,152,162,165,166,167,],[17,17,-25,17,17,17,17,-40,-41,-42,-44,-46,-47,-48,-49,-50,-15,-51,17,17,-52,17,17,17,17,17,17,17,17,17,17,-45,-36,-35,-37,-26,-27,-28,-29,-30,-31,-32,-33,-34,-43,-19,-38,-39,17,-94,122,-96,17,17,17,-53,122,122,122,-82,-83,122,-95,122,122,122,122,122,17,122,122,-97,-98,]),'-':([0,9,11,14,16,17,18,19,20,21,22,23,24,25,26,27,28,30,31,33,34,37,38,39,40,41,42,43,44,45,46,47,48,53,54,55,56,58,64,65,66,68,69,70,71,77,78,79,80,81,82,83,84,85,86,87,89,90,91,95,96,97,98,99,100,101,102,103,104,105,106,107,108,113,115,117,122,123,124,125,126,132,133,134,135,136,137,138,139,143,144,145,146,147,148,149,152,153,154,155,156,157,158,160,162,165,166,167,174,175,176,177,178,179,180,],[16,16,45,-52,16,16,16,16,-40,-41,-42,-44,-46,-47,-48,-49,-50,-15,68,-51,16,16,-52,16,16,16,16,16,16,16,16,16,16,-45,-36,-35,-37,45,100,-52,-90,68,-91,-92,68,45,45,45,45,-30,-31,-32,-33,-34,-43,-19,-38,-39,16,-94,68,-96,68,68,68,68,68,68,16,16,-93,-89,-90,16,45,-53,68,68,100,68,-52,-84,-85,-86,-87,-88,-82,-83,-58,68,-95,68,68,68,68,68,16,68,68,68,68,68,68,100,68,68,-97,-98,45,100,100,100,100,100,100,]),'NOT':([0,9,11,16,17,18,19,20,21,22,23,24,25,26,27,28,30,33,34,37,38,39,40,41,42,43,44,45,46,47,48,53,54,55,56,77,78,79,80,81,82,83,84,85,86,87,89,90,91,95,96,97,104,105,113,117,122,123,125,137,138,143,144,145,146,147,148,149,152,162,165,166,167,],[18,18,-25,18,18,18,18,-40,-41,-42,-44,-46,-47,-48,-49,-50,-15,-51,18,18,-52,18,18,18,18,18,18,18,18,18,18,-45,-36,-35,-37,-26,-27,-28,-29,-30,-31,-32,-33,-34,-43,-19,-38,-39,18,-94,123,-96,18,18,18,-53,123,123,123,-82,-83,123,-95,123,123,123,123,123,18,123,123,-97,-98,]),'(':([0,9,11,16,17,18,19,20,21,22,23,24,25,26,27,28,30,31,33,34,37,38,39,40,41,42,43,44,45,46,47,48,53,54,55,56,68,71,77,78,79,80,81,82,83,84,85,86,87,89,90,91,95,96,97,98,99,100,101,102,103,104,105,113,117,122,123,125,126,129,130,137,138,143,144,145,146,147,148,149,152,153,154,155,156,157,158,162,165,166,167,],[19,19,-25,19,19,19,19,-40,-41,-42,-44,-46,-47,-48,-49,-50,-15,71,-51,19,19,-52,19,19,19,19,19,19,19,19,19,19,-45,-36,-35,-37,71,71,-26,-27,-28,-29,-30,-31,-32,-33,-34,-43,-19,-38,-39,19,-94,125,-96,71,71,71,71,71,71,19,19,19,-53,125,125,125,71,71,71,-82,-83,125,-95,125,125,125,125,125,19,71,71,71,71,71,71,125,125,-97,-98,]),'+':([0,9,11,14,16,17,18,19,20,21,22,23,24,25,26,27,28,30,31,33,34,37,38,39,40,41,42,43,44,45,46,47,48,53,54,55,56,58,64,65,66,68,69,70,71,77,78,79,80,81,82,83,84,85,86,87,89,90,91,95,96,97,98,99,100,101,102,103,104,105,106,107,108,113,115,117,122,123,124,125,126,132,133,134,135,136,137,138,139,143,144,145,146,147,148,149,152,153,154,155,156,157,158,160,162,165,166,167,174,175,176,177,178,179,180,],[15,15,44,-52,15,15,15,15,-40,-41,-42,-44,-46,-47,-48,-49,-50,-15,67,-51,15,15,-52,15,15,15,15,15,15,15,15,15,15,-45,-36,-35,-37,44,99,-52,-90,67,-91,-92,67,44,44,44,44,-30,-31,-32,-33,-34,-43,-19,-38,-39,15,-94,67,-96,67,67,67,67,67,67,15,15,-93,-89,-90,15,44,-53,67,67,99,67,-52,-84,-85,-86,-87,-88,-82,-83,-58,67,-95,67,67,67,67,67,15,67,67,67,67,67,67,99,67,67,-97,-98,44,99,99,99,99,99,99,]),'NATURALS':([0,9,16,17,18,19,34,37,39,40,41,42,43,44,45,46,47,48,87,91,104,105,113,152,],[24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,-19,24,24,24,24,24,]),'INTEGERS':([0,9,16,17,18,19,34,37,39,40,41,42,43,44,45,46,47,48,87,91,104,105,113,152,],[25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,-19,25,25,25,25,25,]),'POSITIVES':([0,9,16,17,18,19,34,37,39,40,41,42,43,44,45,46,47,48,87,91,104,105,113,152,],[26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,-19,26,26,26,26,26,]),'REALS':([0,9,16,17,18,19,34,37,39,40,41,42,43,44,45,46,47,48,87,91,104,105,113,152,],[27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,-19,27,27,27,27,27,]),'EMPTY':([0,9,16,17,18,19,34,37,39,40,41,42,43,44,45,46,47,48,87,91,104,105,113,152,],[28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,-19,28,28,28,28,28,]),'<':([0,9,12,29,30,33,34,38,69,70,87,88,94,106,107,108,117,124,126,132,133,134,135,136,139,160,],[29,37,29,29,-15,-51,29,-52,-91,-92,-19,29,29,-93,-89,-90,-53,155,-52,-84,-85,-86,-87,-88,-58,155,]),'IDENTIFIER':([0,9,11,12,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,33,34,37,38,39,40,41,42,43,44,45,46,47,48,53,54,55,56,68,71,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,94,95,96,97,98,99,100,101,102,103,104,105,113,117,122,123,125,129,130,137,138,143,144,145,146,147,148,149,152,153,154,155,156,157,158,162,165,166,167,],[30,30,-25,30,30,30,30,30,-40,-41,-42,-44,-46,-47,-48,-49,-50,30,-15,30,-51,30,30,-52,30,30,30,30,30,30,30,30,30,30,-45,-36,-35,-37,30,30,-26,-27,-28,-29,-30,-31,-32,-33,-34,-43,-19,30,-38,-39,30,30,-94,30,-96,30,30,30,30,30,30,30,30,30,-53,30,30,30,30,30,-82,-83,30,-95,30,30,30,30,30,30,30,30,30,30,30,30,30,30,-97,-98,]),'{':([0,9,16,17,18,19,34,37,39,40,41,42,43,44,45,46,47,48,87,91,104,105,113,152,],[31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,-19,31,31,31,31,31,]),'[':([0,9,14,16,17,18,19,21,30,34,37,38,39,40,41,42,43,44,45,46,47,48,65,69,87,91,104,105,113,117,126,152,],[32,32,-52,32,32,32,32,59,-15,32,32,-52,32,32,32,32,32,32,32,32,32,32,-52,59,-19,32,32,32,32,-53,-52,32,]),'UINT':([0,9,11,15,16,17,18,19,20,21,22,23,24,25,26,27,28,30,31,32,33,34,37,38,39,40,41,42,43,44,45,46,47,48,49,53,54,55,56,59,67,68,71,77,78,79,80,81,82,83,84,85,86,87,89,90,91,95,96,97,98,99,100,101,102,103,104,105,110,111,113,117,122,123,125,137,138,143,144,145,146,147,148,149,152,153,154,155,156,157,158,162,165,166,167,],[33,33,-25,33,33,33,33,33,-40,-41,-42,-44,-46,-47,-48,-49,-50,-15,33,33,-51,33,33,-52,33,33,33,33,33,33,33,33,33,33,33,-45,-36,-35,-37,33,33,33,33,-26,-27,-28,-29,-30,-31,-32,-33,-34,-43,-19,-38,-39,33,-94,33,-96,33,33,33,33,33,33,33,33,33,33,33,-53,33,33,33,-82,-83,33,-95,33,33,33,33,33,33,33,33,33,33,33,33,33,33,-97,-98,]),';':([5,6,7,8,11,14,20,21,22,23,24,25,26,27,28,30,33,35,36,38,51,53,54,55,56,76,77,78,79,80,81,82,83,84,85,86,89,90,95,97,112,117,144,166,167,],[34,-7,-8,-16,-25,-52,-40,-41,-42,-44,-46,-47,-48,-49,-50,-15,-51,-17,-18,-52,88,-45,-36,-35,-37,-9,-26,-27,-28,-29,-30,-31,-32,-33,-34,-43,-38,-39,-94,-96,-22,-53,-95,-97,-98,]),'ASSIGN':([10,13,14,30,52,93,],[39,-10,-11,-15,-11,-12,]),',':([11,13,20,21,22,23,24,25,26,27,28,30,33,38,52,53,54,55,56,58,61,64,65,66,69,70,72,75,77,78,79,80,81,82,83,84,85,86,89,90,93,95,97,106,107,108,115,117,126,132,133,134,135,136,139,144,160,166,167,],[-25,-10,-40,-41,-42,-44,-46,-47,-48,-49,-50,-15,-51,-52,-11,-45,-36,-35,-37,91,94,98,-52,-90,-91,-92,111,113,-26,-27,-28,-29,-30,-31,-32,-33,-34,-43,-38,-39,-12,-94,-96,-93,-89,-90,91,-53,-52,-84,-85,-86,-87,-88,-58,-95,98,-97,-98,]),'>':([11,13,20,21,22,23,24,25,26,27,28,30,33,38,52,53,54,55,56,60,61,69,70,74,75,77,78,79,80,81,82,83,84,85,86,89,90,93,95,97,106,107,108,117,118,124,126,132,133,134,135,136,139,142,144,160,166,167,],[-25,-10,-40,-41,-42,-44,-46,-47,-48,-49,-50,-15,-51,-52,-11,-45,-36,-35,-37,93,-14,-91,-92,112,-24,-26,-27,-28,-29,-30,-31,-32,-33,-34,-43,-38,-39,-12,-94,-96,-93,-89,-90,-53,-13,156,-52,-84,-85,-86,-87,-88,-58,-23,-95,156,-97,-98,]),'|':([11,20,21,22,23,24,25,26,27,28,30,33,38,53,54,55,56,63,69,70,77,78,79,80,81,82,83,84,85,86,89,90,95,97,106,107,108,117,119,120,121,127,128,132,133,134,135,136,137,138,139,144,150,151,159,161,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,],[-25,-40,-41,-42,-44,-46,-47,-48,-49,-50,-15,-51,-52,-45,-36,-35,-37,96,-91,-92,-26,-27,-28,-29,-30,-31,-32,-33,-34,-43,-38,-39,-94,-96,-93,-89,-90,-53,143,-65,-66,-72,-73,-84,-85,-86,-87,-88,-82,-83,-58,-95,-67,-68,143,-71,-97,-98,143,143,143,143,143,143,-69,-74,-75,-76,-77,-78,-79,-70,143,143,]),'}':([11,20,21,22,23,24,25,26,27,28,30,33,38,53,54,55,56,62,63,64,65,66,69,70,77,78,79,80,81,82,83,84,85,86,89,90,95,97,106,107,108,117,119,120,121,127,128,131,132,133,134,135,136,137,138,139,144,150,151,161,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,],[-25,-40,-41,-42,-44,-46,-47,-48,-49,-50,-15,-51,-52,-45,-36,-35,-37,95,97,-57,-52,-90,-91,-92,-26,-27,-28,-29,-30,-31,-32,-33,-34,-43,-38,-39,-94,-96,-93,-89,-90,-53,144,-65,-66,-72,-73,-56,-84,-85,-86,-87,-88,-82,-83,-58,-95,-67,-68,-71,-97,-98,-59,-60,-61,-62,-63,-64,-69,-74,-75,-76,-77,-78,-79,-70,-80,-81,]),'TRUE':([11,20,21,22,23,24,25,26,27,28,30,33,38,53,54,55,56,77,78,79,80,81,82,83,84,85,86,89,90,95,96,97,117,122,123,125,137,138,143,144,145,146,147,148,149,162,165,166,167,],[-25,-40,-41,-42,-44,-46,-47,-48,-49,-50,-15,-51,-52,-45,-36,-35,-37,-26,-27,-28,-29,-30,-31,-32,-33,-34,-43,-38,-39,-94,127,-96,-53,127,127,127,-82,-83,127,-95,127,127,127,127,127,127,127,-97,-98,]),'FALSE':([11,20,21,22,23,24,25,26,27,28,30,33,38,53,54,55,56,77,78,79,80,81,82,83,84,85,86,89,90,95,96,97,117,122,123,125,137,138,143,144,145,146,147,148,149,162,165,166,167,],[-25,-40,-41,-42,-44,-46,-47,-48,-49,-50,-15,-51,-52,-45,-36,-35,-37,-26,-27,-28,-29,-30,-31,-32,-33,-34,-43,-38,-39,-94,128,-96,-53,128,128,128,-82,-83,128,-95,128,128,128,128,128,128,128,-97,-98,]),'EXISTS':([11,20,21,22,23,24,25,26,27,28,30,33,38,53,54,55,56,77,78,79,80,81,82,83,84,85,86,89,90,95,96,97,117,122,123,125,137,138,143,144,145,146,147,148,149,162,165,166,167,],[-25,-40,-41,-42,-44,-46,-47,-48,-49,-50,-15,-51,-52,-45,-36,-35,-37,-26,-27,-28,-29,-30,-31,-32,-33,-34,-43,-38,-39,-94,129,-96,-53,129,129,129,-82,-83,129,-95,129,129,129,129,129,129,129,-97,-98,]),'FORALL':([11,20,21,22,23,24,25,26,27,28,30,33,38,53,54,55,56,77,78,79,80,81,82,83,84,85,86,89,90,95,96,97,117,122,123,125,137,138,143,144,145,146,147,148,149,162,165,166,167,],[-25,-40,-41,-42,-44,-46,-47,-48,-49,-50,-15,-51,-52,-45,-36,-35,-37,-26,-27,-28,-29,-30,-31,-32,-33,-34,-43,-38,-39,-94,130,-96,-53,130,130,130,-82,-83,130,-95,130,130,130,130,130,130,130,-97,-98,]),'UNION':([11,14,20,21,22,23,24,25,26,27,28,30,33,38,53,54,55,56,58,77,78,79,80,81,82,83,84,85,86,89,90,95,97,115,117,144,166,167,174,],[40,-52,-40,-41,-42,-44,-46,-47,-48,-49,-50,-15,-51,-52,-45,-36,-35,-37,40,40,40,40,40,-30,-31,-32,-33,-34,-43,-38,-39,-94,-96,40,-53,-95,-97,-98,40,]),'BACKSLASH':([11,14,20,21,22,23,24,25,26,27,28,30,33,38,53,54,55,56,58,77,78,79,80,81,82,83,84,85,86,89,90,95,97,115,117,144,166,167,174,],[41,-52,-40,-41,-42,-44,-46,-47,-48,-49,-50,-15,-51,-52,-45,-36,-35,-37,41,41,41,41,41,-30,-31,-32,-33,-34,-43,-38,-39,-94,-96,41,-53,-95,-97,-98,41,]),'^':([11,14,20,21,22,23,24,25,26,27,28,30,33,38,53,54,55,56,58,77,78,79,80,81,82,83,84,85,86,89,90,95,97,115,117,144,166,167,174,],[42,-52,-40,-41,-42,-44,-46,-47,-48,-49,-50,-15,-51,-52,-45,-36,-35,-37,42,42,42,42,42,-30,-31,-32,-33,-34,-43,-38,-39,-94,-96,42,-53,-95,-97,-98,42,]),'INTERSECTION':([11,14,20,21,22,23,24,25,26,27,28,30,33,38,53,54,55,56,58,77,78,79,80,81,82,83,84,85,86,89,90,95,97,115,117,144,166,167,174,],[43,-52,-40,-41,-42,-44,-46,-47,-48,-49,-50,-15,-51,-52,-45,-36,-35,-37,43,43,43,43,43,-30,-31,-32,-33,-34,-43,-38,-39,-94,-96,43,-53,-95,-97,-98,43,]),'*':([11,14,20,21,22,23,24,25,26,27,28,30,33,38,53,54,55,56,58,64,65,66,69,70,77,78,79,80,81,82,83,84,85,86,89,90,95,97,106,107,108,115,117,124,126,132,133,134,135,136,139,144,160,166,167,174,175,176,177,178,179,180,],[46,-52,-40,-41,-42,-44,-46,-47,-48,-49,-50,-15,-51,-52,-45,-36,-35,-37,46,101,-52,-90,-91,-92,46,46,46,46,46,46,-32,-33,-34,-43,-38,-39,-94,-96,-93,-89,-90,46,-53,101,-52,101,101,-86,-87,-88,-58,-95,101,-97,-98,46,101,101,101,101,101,101,]),'/':([11,14,20,21,22,23,24,25,26,27,28,30,33,38,53,54,55,56,58,64,65,66,69,70,77,78,79,80,81,82,83,84,85,86,89,90,95,97,106,107,108,115,117,124,126,132,133,134,135,136,139,144,160,166,167,174,175,176,177,178,179,180,],[47,-52,-40,-41,-42,-44,-46,-47,-48,-49,-50,-15,-51,-52,-45,-36,-35,-37,47,102,-52,-90,-91,-92,47,47,47,47,47,47,-32,-33,-34,-43,-38,-39,-94,-96,-93,-89,-90,47,-53,102,-52,102,102,-86,-87,-88,-58,-95,102,-97,-98,47,102,102,102,102,102,102,]),'%':([11,14,20,21,22,23,24,25,26,27,28,30,33,38,53,54,55,56,58,64,65,66,69,70,77,78,79,80,81,82,83,84,85,86,89,90,95,97,106,107,108,115,117,124,126,132,133,134,135,136,139,144,160,166,167,174,175,176,177,178,179,180,],[48,-52,-40,-41,-42,-44,-46,-47,-48,-49,-50,-15,-51,-52,-45,-36,-35,-37,48,103,-52,-90,-91,-92,48,48,48,48,48,48,-32,-33,-34,-43,-38,-39,-94,-96,-93,-89,-90,48,-53,103,-52,103,103,-86,-87,-88,-58,-95,103,-97,-98,48,103,103,103,103,103,103,]),'$':([11,14,20,21,22,23,24,25,26,27,28,30,33,38,53,54,55,56,58,77,78,79,80,81,82,83,84,85,86,89,90,95,97,115,117,144,166,167,174,],[49,-52,-40,-41,-42,-44,-46,-47,-48,-49,-50,-15,-51,-52,-45,-36,-35,-37,49,49,49,49,49,-30,-31,-32,-33,-34,-43,-38,-39,-94,-96,49,-53,-95,-97,-98,49,]),')':([20,21,22,23,24,25,26,27,28,30,33,38,53,54,55,56,57,58,64,69,70,77,78,79,80,81,82,83,84,85,86,89,90,95,97,106,107,108,109,115,116,117,120,121,126,127,128,131,132,133,134,135,136,139,144,150,151,159,160,161,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,],[-40,-41,-42,-44,-46,-47,-48,-49,-50,-15,-51,-52,-45,-36,-35,-37,89,90,-57,-91,-92,-26,-27,-28,-29,-30,-31,-32,-33,-34,-43,-38,-39,-94,-96,-93,-89,-90,139,-55,-54,-53,-65,-66,-52,-72,-73,-56,-84,-85,-86,-87,-88,-58,-95,-67,-68,181,-57,-71,-97,-98,-59,-60,-61,-62,-63,-64,-69,-74,-75,-76,-77,-78,-79,-70,-80,-81,]),'OR':([20,21,22,23,24,25,26,27,28,30,33,38,53,54,55,56,69,70,77,78,79,80,81,82,83,84,85,86,89,90,95,97,106,107,108,117,119,120,121,127,128,132,133,134,135,136,139,144,150,151,159,161,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,],[-40,-41,-42,-44,-46,-47,-48,-49,-50,-15,-51,-52,-45,-36,-35,-37,-91,-92,-26,-27,-28,-29,-30,-31,-32,-33,-34,-43,-38,-39,-94,-96,-93,-89,-90,-53,145,-65,-66,-72,-73,-84,-85,-86,-87,-88,-58,-95,-67,-68,145,-71,-97,-98,145,145,145,145,145,145,-69,-74,-75,-76,-77,-78,-79,-70,145,145,]),'&':([20,21,22,23,24,25,26,27,28,30,33,38,53,54,55,56,69,70,77,78,79,80,81,82,83,84,85,86,89,90,95,97,106,107,108,117,119,120,121,127,128,132,133,134,135,136,139,144,150,151,159,161,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,],[-40,-41,-42,-44,-46,-47,-48,-49,-50,-15,-51,-52,-45,-36,-35,-37,-91,-92,-26,-27,-28,-29,-30,-31,-32,-33,-34,-43,-38,-39,-94,-96,-93,-89,-90,-53,146,-65,-66,-72,-73,-84,-85,-86,-87,-88,-58,-95,-67,-68,146,-71,-97,-98,146,146,146,146,146,146,-69,-74,-75,-76,-77,-78,-79,-70,146,146,]),'AND':([20,21,22,23,24,25,26,27,28,30,33,38,53,54,55,56,69,70,77,78,79,80,81,82,83,84,85,86,89,90,95,97,106,107,108,117,119,120,121,127,128,132,133,134,135,136,139,144,150,151,159,161,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,],[-40,-41,-42,-44,-46,-47,-48,-49,-50,-15,-51,-52,-45,-36,-35,-37,-91,-92,-26,-27,-28,-29,-30,-31,-32,-33,-34,-43,-38,-39,-94,-96,-93,-89,-90,-53,147,-65,-66,-72,-73,-84,-85,-86,-87,-88,-58,-95,-67,-68,147,-71,-97,-98,147,147,147,147,147,147,-69,-74,-75,-76,-77,-78,-79,-70,147,147,]),'EQUIV':([20,21,22,23,24,25,26,27,28,30,33,38,53,54,55,56,69,70,77,78,79,80,81,82,83,84,85,86,89,90,95,97,106,107,108,117,119,120,121,127,128,132,133,134,135,136,139,144,150,151,159,161,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,],[-40,-41,-42,-44,-46,-47,-48,-49,-50,-15,-51,-52,-45,-36,-35,-37,-91,-92,-26,-27,-28,-29,-30,-31,-32,-33,-34,-43,-38,-39,-94,-96,-93,-89,-90,-53,148,-65,-66,-72,-73,-84,-85,-86,-87,-88,-58,-95,-67,-68,148,-71,-97,-98,148,148,148,148,148,148,-69,-74,-75,-76,-77,-78,-79,-70,148,148,]),'IMPLY':([20,21,22,23,24,25,26,27,28,30,33,38,53,54,55,56,69,70,77,78,79,80,81,82,83,84,85,86,89,90,95,97,106,107,108,117,119,120,121,127,128,132,133,134,135,136,139,144,150,151,159,161,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,],[-40,-41,-42,-44,-46,-47,-48,-49,-50,-15,-51,-52,-45,-36,-35,-37,-91,-92,-26,-27,-28,-29,-30,-31,-32,-33,-34,-43,-38,-39,-94,-96,-93,-89,-90,-53,149,-65,-66,-72,-73,-84,-85,-86,-87,-88,-58,-95,-67,-68,149,-71,-97,-98,149,149,149,149,149,149,-69,-74,-75,-76,-77,-78,-79,-70,149,149,]),'IN':([30,33,38,50,65,66,69,70,88,106,107,108,114,117,124,126,132,133,134,135,136,139,160,163,164,],[-15,-51,-52,87,104,105,-91,-92,-21,-93,-89,-90,-20,-53,152,-52,-84,-85,-86,-87,-88,-58,152,104,105,]),'=':([30,33,38,69,70,106,107,108,117,124,126,132,133,134,135,136,139,160,],[-15,-51,-52,-91,-92,-93,-89,-90,-53,153,-52,-84,-85,-86,-87,-88,-58,153,]),'NEQ':([30,33,38,69,70,106,107,108,117,124,126,132,133,134,135,136,139,160,],[-15,-51,-52,-91,-92,-93,-89,-90,-53,154,-52,-84,-85,-86,-87,-88,-58,154,]),'LEQ':([30,33,38,69,70,106,107,108,117,124,126,132,133,134,135,136,139,160,],[-15,-51,-52,-91,-92,-93,-89,-90,-53,157,-52,-84,-85,-86,-87,-88,-58,157,]),'GEQ':([30,33,38,69,70,106,107,108,117,124,126,132,133,134,135,136,139,160,],[-15,-51,-52,-91,-92,-93,-89,-90,-53,158,-52,-84,-85,-86,-87,-88,-58,158,]),'DOTS':([33,72,],[-51,110,]),']':([33,92,140,141,],[-51,117,166,167,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'grammar_start_rule':([0,],[1,]),'armoise_description':([0,],[2,]),'empty':([0,],[3,]),'definition_or_predicate_list':([0,34,],[4,73,]),'definition_or_predicate':([0,34,],[5,5,]),'predicate':([0,34,39,],[6,6,76,]),'predicate_definition':([0,12,34,88,],[7,51,7,51,]),'predicate_without_local_context':([0,9,34,37,39,104,105,113,],[8,36,8,75,8,137,138,75,]),'local_context':([0,34,39,],[9,9,9,]),'identifier_or_tuple':([0,12,29,34,88,94,],[10,10,61,10,10,61,]),'set':([0,9,16,17,18,19,34,37,39,40,41,42,43,44,45,46,47,48,91,104,105,113,152,],[11,11,54,55,56,58,11,11,11,77,78,79,80,81,82,83,84,85,115,11,11,11,174,]),'tuple_of_identifiers':([0,12,29,34,88,94,],[13,13,13,13,13,13,]),'identifier':([0,9,12,16,17,18,19,29,31,34,37,39,40,41,42,43,44,45,46,47,48,68,71,88,91,94,96,98,99,100,101,102,103,104,105,113,122,123,125,129,130,143,145,146,147,148,149,152,153,154,155,156,157,158,162,165,],[14,38,52,38,38,38,38,52,65,14,38,38,38,38,38,38,38,38,38,38,38,38,38,52,38,52,126,38,38,38,38,38,38,38,38,38,126,126,126,163,163,126,126,126,126,126,126,38,38,38,38,38,38,38,126,126,]),'simple_set':([0,9,16,17,18,19,34,37,39,40,41,42,43,44,45,46,47,48,91,104,105,113,152,],[20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,]),'list_element':([0,9,16,17,18,19,31,34,37,39,40,41,42,43,44,45,46,47,48,68,71,91,96,98,99,100,101,102,103,104,105,113,122,123,125,143,145,146,147,148,149,152,153,154,155,156,157,158,162,165,],[21,21,21,21,21,21,69,21,21,21,21,21,21,21,21,21,21,21,21,69,69,21,69,69,69,69,69,69,69,21,21,21,69,69,69,69,69,69,69,69,69,21,69,69,69,69,69,69,69,69,]),'range':([0,9,16,17,18,19,34,37,39,40,41,42,43,44,45,46,47,48,91,104,105,113,152,],[22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,]),'integer':([0,9,15,16,17,18,19,31,32,34,37,39,40,41,42,43,44,45,46,47,48,49,59,67,68,71,91,96,98,99,100,101,102,103,104,105,110,111,113,122,123,125,143,145,146,147,148,149,152,153,154,155,156,157,158,162,165,],[23,23,53,23,23,23,23,70,72,23,23,23,23,23,23,23,23,23,23,23,23,86,92,106,70,70,23,70,70,70,70,70,70,70,23,23,140,141,23,70,70,70,70,70,70,70,70,70,23,70,70,70,70,70,70,70,70,]),'tuple_of_predicates_without_local_context':([9,],[35,]),'list_of_predicate_definitions':([12,88,],[50,114,]),'list_of_boolean_combinations':([19,91,],[57,116,]),'list_of_tuples':([29,94,],[60,118,]),'list_of_terms':([31,71,98,125,],[62,109,131,109,]),'typed_identifier':([31,129,130,],[63,162,165,]),'term':([31,68,71,96,98,99,100,101,102,103,122,123,125,143,145,146,147,148,149,153,154,155,156,157,158,162,165,],[64,107,64,124,64,132,133,134,135,136,124,124,160,124,124,124,124,124,124,175,176,177,178,179,180,124,124,]),'vector_of_terms':([31,68,71,96,98,99,100,101,102,103,122,123,125,126,129,130,143,145,146,147,148,149,153,154,155,156,157,158,162,165,],[66,108,108,108,108,108,108,108,108,108,108,108,108,161,164,164,108,108,108,108,108,108,108,108,108,108,108,108,108,108,]),'list_of_tuple_of_predicates':([37,113,],[74,142,]),'formula':([96,122,123,125,143,145,146,147,148,149,162,165,],[119,150,151,159,168,169,170,171,172,173,182,183,]),'term_comparison':([96,122,123,125,143,145,146,147,148,149,162,165,],[120,120,120,120,120,120,120,120,120,120,120,120,]),'quantified_formula':([96,122,123,125,143,145,146,147,148,149,162,165,],[121,121,121,121,121,121,121,121,121,121,121,121,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> grammar_start_rule","S'",1,None,None,None),
  ('grammar_start_rule -> armoise_description','grammar_start_rule',1,'p_grammar_start_rule','parser.py',35),
  ('grammar_start_rule -> empty','grammar_start_rule',1,'p_grammar_start_rule','parser.py',36),
  ('empty -> <empty>','empty',0,'p_empty','parser.py',42),
  ('armoise_description -> definition_or_predicate_list','armoise_description',1,'p_armoise_description','parser.py',46),
  ('definition_or_predicate_list -> definition_or_predicate ; definition_or_predicate_list','definition_or_predicate_list',3,'p_definition_or_predicate_list','parser.py',50),
  ('definition_or_predicate_list -> definition_or_predicate ;','definition_or_predicate_list',2,'p_definition_or_predicate_list','parser.py',51),
  ('definition_or_predicate -> predicate','definition_or_predicate',1,'p_definition_or_predicate','parser.py',59),
  ('definition_or_predicate -> predicate_definition','definition_or_predicate',1,'p_definition_or_predicate','parser.py',60),
  ('predicate_definition -> identifier_or_tuple ASSIGN predicate','predicate_definition',3,'p_predicate_definition','parser.py',64),
  ('identifier_or_tuple -> tuple_of_identifiers','identifier_or_tuple',1,'p_identifier_or_tuple','parser.py',68),
  ('identifier_or_tuple -> identifier','identifier_or_tuple',1,'p_identifier_or_tuple','parser.py',69),
  ('tuple_of_identifiers -> < list_of_tuples >','tuple_of_identifiers',3,'p_tuple_of_identifiers','parser.py',73),
  ('list_of_tuples -> identifier_or_tuple , list_of_tuples','list_of_tuples',3,'p_list_of_tuples','parser.py',77),
  ('list_of_tuples -> identifier_or_tuple','list_of_tuples',1,'p_list_of_tuples','parser.py',78),
  ('identifier -> IDENTIFIER','identifier',1,'p_identifier','parser.py',84),
  ('predicate -> predicate_without_local_context','predicate',1,'p_predicate','parser.py',88),
  ('predicate -> local_context tuple_of_predicates_without_local_context','predicate',2,'p_predicate','parser.py',89),
  ('predicate -> local_context predicate_without_local_context','predicate',2,'p_predicate','parser.py',90),
  ('local_context -> LET list_of_predicate_definitions IN','local_context',3,'p_local_context','parser.py',97),
  ('list_of_predicate_definitions -> predicate_definition ; list_of_predicate_definitions','list_of_predicate_definitions',3,'p_list_of_predicate_definitions','parser.py',101),
  ('list_of_predicate_definitions -> predicate_definition ;','list_of_predicate_definitions',2,'p_list_of_predicate_definitions','parser.py',102),
  ('tuple_of_predicates_without_local_context -> < list_of_tuple_of_predicates >','tuple_of_predicates_without_local_context',3,'p_tuple_of_predicates_without_local_context','parser.py',108),
  ('list_of_tuple_of_predicates -> predicate_without_local_context , list_of_tuple_of_predicates','list_of_tuple_of_predicates',3,'p_list_of_tuple_of_predicates','parser.py',112),
  ('list_of_tuple_of_predicates -> predicate_without_local_context','list_of_tuple_of_predicates',1,'p_list_of_tuple_of_predicates','parser.py',113),
  ('predicate_without_local_context -> set','predicate_without_local_context',1,'p_predicate_without_local_context','parser.py',119),
  ('set -> set UNION set','set',3,'p_set','parser.py',123),
  ('set -> set BACKSLASH set','set',3,'p_set','parser.py',124),
  ('set -> set ^ set','set',3,'p_set','parser.py',125),
  ('set -> set INTERSECTION set','set',3,'p_set','parser.py',126),
  ('set -> set + set','set',3,'p_set','parser.py',127),
  ('set -> set - set','set',3,'p_set','parser.py',128),
  ('set -> set * set','set',3,'p_set','parser.py',129),
  ('set -> set / set','set',3,'p_set','parser.py',130),
  ('set -> set % set','set',3,'p_set','parser.py',131),
  ('set -> ! set','set',2,'p_set','parser.py',132),
  ('set -> - set','set',2,'p_set','parser.py',133),
  ('set -> NOT set','set',2,'p_set','parser.py',134),
  ('set -> ( list_of_boolean_combinations )','set',3,'p_set','parser.py',135),
  ('set -> ( set )','set',3,'p_set','parser.py',136),
  ('set -> simple_set','set',1,'p_set','parser.py',137),
  ('set -> list_element','set',1,'p_set','parser.py',138),
  ('set -> range','set',1,'p_set','parser.py',139),
  ('set -> set $ integer','set',3,'p_set','parser.py',140),
  ('set -> integer','set',1,'p_set','parser.py',141),
  ('set -> + integer','set',2,'p_set','parser.py',142),
  ('set -> NATURALS','set',1,'p_set','parser.py',143),
  ('set -> INTEGERS','set',1,'p_set','parser.py',144),
  ('set -> POSITIVES','set',1,'p_set','parser.py',145),
  ('set -> REALS','set',1,'p_set','parser.py',146),
  ('set -> EMPTY','set',1,'p_set','parser.py',147),
  ('integer -> UINT','integer',1,'p_integer','parser.py',229),
  ('list_element -> identifier','list_element',1,'p_list_element','parser.py',233),
  ('list_element -> list_element [ integer ]','list_element',4,'p_list_element','parser.py',234),
  ('list_of_boolean_combinations -> set , list_of_boolean_combinations','list_of_boolean_combinations',3,'p_list_of_boolean_combinations','parser.py',241),
  ('list_of_boolean_combinations -> set , set','list_of_boolean_combinations',3,'p_list_of_boolean_combinations','parser.py',242),
  ('list_of_terms -> term , list_of_terms','list_of_terms',3,'p_list_of_terms','parser.py',250),
  ('list_of_terms -> term','list_of_terms',1,'p_list_of_terms','parser.py',251),
  ('vector_of_terms -> ( list_of_terms )','vector_of_terms',3,'p_vector_of_terms','parser.py',257),
  ('formula -> formula | formula','formula',3,'p_formula','parser.py',261),
  ('formula -> formula OR formula','formula',3,'p_formula','parser.py',262),
  ('formula -> formula & formula','formula',3,'p_formula','parser.py',263),
  ('formula -> formula AND formula','formula',3,'p_formula','parser.py',264),
  ('formula -> formula EQUIV formula','formula',3,'p_formula','parser.py',265),
  ('formula -> formula IMPLY formula','formula',3,'p_formula','parser.py',266),
  ('formula -> term_comparison','formula',1,'p_formula','parser.py',267),
  ('formula -> quantified_formula','formula',1,'p_formula','parser.py',268),
  ('formula -> ! formula','formula',2,'p_formula','parser.py',269),
  ('formula -> NOT formula','formula',2,'p_formula','parser.py',270),
  ('formula -> term IN set','formula',3,'p_formula','parser.py',271),
  ('formula -> ( formula )','formula',3,'p_formula','parser.py',272),
  ('formula -> identifier vector_of_terms','formula',2,'p_formula','parser.py',273),
  ('formula -> TRUE','formula',1,'p_formula','parser.py',274),
  ('formula -> FALSE','formula',1,'p_formula','parser.py',275),
  ('term_comparison -> term = term','term_comparison',3,'p_term_comparison','parser.py',300),
  ('term_comparison -> term NEQ term','term_comparison',3,'p_term_comparison','parser.py',301),
  ('term_comparison -> term < term','term_comparison',3,'p_term_comparison','parser.py',302),
  ('term_comparison -> term > term','term_comparison',3,'p_term_comparison','parser.py',303),
  ('term_comparison -> term LEQ term','term_comparison',3,'p_term_comparison','parser.py',304),
  ('term_comparison -> term GEQ term','term_comparison',3,'p_term_comparison','parser.py',305),
  ('quantified_formula -> EXISTS typed_identifier formula','quantified_formula',3,'p_quantified_formula','parser.py',316),
  ('quantified_formula -> FORALL typed_identifier formula','quantified_formula',3,'p_quantified_formula','parser.py',317),
  ('typed_identifier -> identifier IN predicate_without_local_context','typed_identifier',3,'p_typed_identifier','parser.py',322),
  ('typed_identifier -> vector_of_terms IN predicate_without_local_context','typed_identifier',3,'p_typed_identifier','parser.py',323),
  ('term -> term + term','term',3,'p_term','parser.py',327),
  ('term -> term - term','term',3,'p_term','parser.py',328),
  ('term -> term * term','term',3,'p_term','parser.py',329),
  ('term -> term / term','term',3,'p_term','parser.py',330),
  ('term -> term % term','term',3,'p_term','parser.py',331),
  ('term -> - term','term',2,'p_term','parser.py',332),
  ('term -> vector_of_terms','term',1,'p_term','parser.py',333),
  ('term -> list_element','term',1,'p_term','parser.py',334),
  ('term -> integer','term',1,'p_term','parser.py',335),
  ('term -> + integer','term',2,'p_term','parser.py',336),
  ('simple_set -> { list_of_terms }','simple_set',3,'p_simple_set','parser.py',364),
  ('simple_set -> { typed_identifier | formula }','simple_set',5,'p_simple_set','parser.py',365),
  ('simple_set -> { typed_identifier }','simple_set',3,'p_simple_set','parser.py',366),
  ('range -> [ integer DOTS integer ]','range',5,'p_range','parser.py',376),
  ('range -> [ integer , integer ]','range',5,'p_range','parser.py',377),
]
